{"version":3,"sources":["components/TextFiles.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["TextFiles","props","useState","text","setText","className","style","color","mode","heading","id","value","onChange","event","target","backgroundColor","tcol","rows","onClick","newtext","toUpperCase","show","col","toLowerCase","split","length","Navbar","href","title","type","about","role","toggleModeg","htmlFor","placeholder","toggleMode","PropTypes","string","isRequired","defaultprop","Alert","word","alert","charAt","slice","msg","App","setmode","setcol","settcol","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d3427003.chunk.js","sourcesContent":["// import { useState } from \"react\"\r\nimport React ,{useState} from 'react'\r\n\r\nexport default function TextFiles(props) {\r\n  const handleupClick=()=>{\r\n    // console.log(\"uppercase was clicked \"+text);\r\n    let newtext=text.toUpperCase();\r\n    setText(newtext);\r\n    props.show(\"converted to Uppercase\",\"success\");\r\n  }\r\n\r\n const handleonchange=(event)=>{\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n const handlelowClick=(event)=>{\r\n    // console.log(\"on change\");\r\n    let newtext=text.toLowerCase();\r\n    setText(newtext);\r\n    props.show(\"converted to Lowercase\",\"success\");\r\n  }\r\n\r\n  const[text,setText]=useState(\"use text here\");\r\n// handleonchange???? doubt\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode===`dark`?`white`:`black`}}>\r\n        <h1>{props.heading}:-</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"mybox\" value={text} onChange={handleonchange} style={{backgroundColor: props.mode===`light`?`white`:props.tcol , color: props.mode===`light`?`black`:`white`}} rows=\"8\"></textarea>\r\n        </div>\r\n        {/* button.btn.btnprimary */}\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleupClick} style={{backgroundColor: props.mode===`light`?`blue`:props.col}}>To uppercase</button>\r\n         <span>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelowClick} style={{backgroundColor: props.mode===`light`?`blue`:props.col}}>To Lowercase</button>\r\n        </span>\r\n    </div>\r\n    <div className='container my-3' style={{color: props.mode===`light`?`black`:`white`}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words {text.length} characters</p>\r\n       <p>{0.008*text.split(\" \").length} minutes to read the paragraph</p>\r\n      <h2>preview</h2>\r\n      <p>{text.toUpperCase()}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n// \"predeploy\": \"npm run build\",\r\n    // \"deploy\": \"gh-pages -b master -d build\",\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { a } from 'react-router-dom'\r\n\r\n\r\nexport default function \r\nNavbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\"  href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/About\">{props.about}</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleModeg}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable Gdarkmode</label>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable darkmode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n  )\r\n}\r\nNavbar.PropTypes={title: PropTypes.string.isRequired,\r\n                  about: PropTypes.string.isRequired  }\r\nNavbar.defaultprop={title: \"Title name\",\r\n                  about: \"about name\"  }\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        // let lower=word.toLowerCase();\r\n        return word.charAt(0).toUpperCase()+word.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo, from './logo.svg';\nimport './App.css';\nimport TextFiles from './components/TextFiles';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React,  { useState } from 'react'; \n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\"); \n  const [col, setcol] = useState(\"blue\"); \n  const [tcol, settcol] = useState(\"white\"); \n  const [alert, setAlert] = useState(null); \n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500\n\n    )\n  }\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n    setmode(\"dark\");\n    document.body.style.backgroundColor=`#1a2a64`;\n    setcol(\"blue\");\n    settcol(\"#2b2558\");\n    showAlert(\"dark mode enabled\",\"success\");\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor=`white`;\n      setcol(\"blue\");\n      settcol(\"white\");\n      showAlert(\"light mode enabled\",\"success\");\n    }\n  }\n  const toggleModeg=()=>{\n    if(document.body.style.backgroundColor===`#2d682d`){\n    \n    document.body.style.backgroundColor=`white`;\n    setcol(\"#0b621e\");\n    settcol(\"#2b2558\");\n    showAlert(\"gdark mode disabled\",\"success\");\n    }\n    else{\n      document.body.style.backgroundColor=`#2d682d`;\n      setcol(\"rgb(74 167 74)\");\n      settcol(\"rgb(9 56 19)\");\n      showAlert(\"gdark mode enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"AAKASH text convertor\" about=\"About\" mode={mode} toggleMode={toggleMode} toggleModeg={toggleModeg}/>\n    <Alert alert={alert}/>\n    {/* <Navbar/> */}\n    <div className=\"container\">\n        <TextFiles heading=\"Enter text to analyze\"  mode={mode} show={showAlert} tcol={tcol} col={col}  />\n          {/* <Routes>\n            <Route path=\"/about\" element={<About />}>\n            </Route>\n            <Route path=\"/\" element={<TextFiles heading=\"Enter text to analyze\"  mode={mode} show={showAlert} tcol={tcol} col={col}  />}>\n            </Route>\n          </Routes> */}\n        </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}